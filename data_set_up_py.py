{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[],"dockerImageVersionId":30786,"isInternetEnabled":true,"language":"python","sourceType":"script","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import argparse\n\n# Initialize\nparser = argparse.ArgumentParser(description='This is a first time setup program that needs to be run only once.',\n                                 usage='''\n        python first_time_setup.py (data set will be downloaded and extracted to the 'flowers' directory)\n        python first_time_setup.py --save_dir save (data set will be downloaded and extracted to the 'save' directory)''',\n                                 prog='train')\n\n\n## Set directory to save dataset\nparser.add_argument('--save_dir', action=\"store\", default=\"flowers\", help=\"saving directory for the dataset\", dest=\"save_directory\")\n\n## Get the arguments\nargs = parser.parse_args()\n\narg_save_dir =  args.save_directory\n\n# Create saving directory\nimport os\nif not os.path.exists(arg_save_dir):\n    os.mkdir(arg_save_dir)\n    print(\"Directory \" , arg_save_dir ,  \" has been created for saving the \")\nelse:\n    print(\"Directory \" , arg_save_dir ,  \" allready exists for saving checkpoints\")\nsave_dir = arg_save_dir + '/'\n\n\nprint('')\nprint('downloading flowers data please wait...')\nimport urllib.request \nurllib.request.urlretrieve(\"https://s3.amazonaws.com/content.udacity-data.com/nd089/flower_data.tar.gz\", \"flower_data.tar.gz\")\nprint('download finished!')\n\n\nprint('extracting data...')\nimport tarfile\ntar = tarfile.open(\"flower_data.tar.gz\")\ntar.extractall(save_dir)\ntar.close()\nprint('finished!')\n\n\nprint('removing tar file...')\nimport os\nos.remove(\"flower_data.tar.gz\")\nprint(\"file removed!\")","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-10-06T19:55:41.226284Z","iopub.execute_input":"2024-10-06T19:55:41.226764Z","iopub.status.idle":"2024-10-06T19:55:41.245169Z","shell.execute_reply.started":"2024-10-06T19:55:41.226721Z","shell.execute_reply":"2024-10-06T19:55:41.243545Z"},"trusted":true},"execution_count":2,"outputs":[{"name":"stderr","text":"usage: \n        python first_time_setup.py (data set will be downloaded and extracted to the 'flowers' directory)\n        python first_time_setup.py --save_dir save (data set will be downloaded and extracted to the 'save' directory)\ntrain: error: unrecognized arguments: -f /root/.local/share/jupyter/runtime/kernel-d9d64d14-a859-45e4-9c90-2266a0aefc5e.json\n","output_type":"stream"},{"traceback":["An exception has occurred, use %tb to see the full traceback.\n","\u001b[0;31mSystemExit\u001b[0m\u001b[0;31m:\u001b[0m 2\n"],"ename":"SystemExit","evalue":"2","output_type":"error"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/IPython/core/interactiveshell.py:3561: UserWarning: To exit: use 'exit', 'quit', or Ctrl-D.\n  warn(\"To exit: use 'exit', 'quit', or Ctrl-D.\", stacklevel=1)\n","output_type":"stream"}]}]}